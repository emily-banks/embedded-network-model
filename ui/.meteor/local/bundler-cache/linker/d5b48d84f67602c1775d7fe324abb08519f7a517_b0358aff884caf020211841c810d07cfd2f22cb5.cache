[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-server'].Symbol;\nMap = Package['ecmascript-runtime-server'].Map;\nSet = Package['ecmascript-runtime-server'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"en-server.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/en-server.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nMeteor.methods({                                                     // 1\n    'runSimulation': function () {                                   // 2\n        var syncHTTP = Meteor.wrapAsync(HTTP.get);                   // 3\n        var url = \"http://127.0.0.1:5000/\";                          // 4\n        var result = syncHTTP(url, {});                              // 5\n        console.log(result);                                         // 6\n        return result.content; // return JSON.parse(result.content);\n    }                                                                // 9\n});                                                                  // 1\n///////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n  Meteor: function (v) {                                             // 1\n    Meteor = v;                                                      // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\nMeteor.startup(function () {// code to run on server at startup      // 3\n});                                                                  // 5\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"./server/en-server.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["server/en-server.js","server/main.js"],"names":["Meteor","methods","syncHTTP","wrapAsync","HTTP","get","url","result","console","log","content","module","watch","require","v","startup"],"mappings":";;;;;;;;AAAAA,OAAOC,OAAP,CAAe;AACX,qBAAiB,YAAW;AACxB,YAAIC,WAAWF,OAAOG,SAAP,CAAiBC,KAAKC,GAAtB,CAAf;AACA,YAAIC,MAAM,wBAAV;AACA,YAAIC,SAASL,SAASI,GAAT,EAAc,EAAd,CAAb;AACAE,gBAAQC,GAAR,CAAYF,MAAZ;AACA,eAAOA,OAAOG,OAAd,CALwB,CAMxB;AACH;AARU,CAAf,wE;;;;;;;;;;;ACAA,IAAIV,eAAJ;AAAWW,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACb,QAAD,YAAQc,CAAR,EAAU;AAACd,aAAOc,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAEXd,OAAOe,OAAP,CAAe,YAAM,CACnB;AACD,CAFD,wE","file":"/app.js","sourcesContent":["Meteor.methods({\r\n    'runSimulation': function() {\r\n        var syncHTTP = Meteor.wrapAsync(HTTP.get);\r\n        var url = \"http://127.0.0.1:5000/\";\r\n        var result = syncHTTP(url, {});\r\n        console.log(result);\r\n        return result.content;\r\n        // return JSON.parse(result.content);\r\n    }\r\n});","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]