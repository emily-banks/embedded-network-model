{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/main.js","filenameRelative":"client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/main.js.map","sourceFileName":"client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.watch(require(\"meteor/templating\"), {\n    Template: function (v) {\n        Template = v;\n    }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.watch(require(\"meteor/reactive-var\"), {\n    ReactiveVar: function (v) {\n        ReactiveVar = v;\n    }\n}, 1);\nmodule.watch(require(\"./main.html\"));\nTemplate.hello.onCreated(function () {\n    function helloOnCreated() {\n        // counter starts at 0\n        this.counter = new ReactiveVar(0);\n        Session.set(\"participants\", []);\n    }\n\n    return helloOnCreated;\n}());\nTemplate.hello.helpers({\n    counter: function () {\n        return Template.instance().counter.get();\n    },\n    retail_tariffs: function () {\n        return ['Retail Tariff 1', 'Retail Tariff 2', 'Retail Tariff 3'];\n    },\n    network_tariffs: function () {\n        return ['Network Tariff 1', 'Network Tariff 2', 'Network Tariff 3'];\n    }\n});\nTemplate.participants.helpers({\n    participants: function () {\n        var participants = Session.get(\"participants\");\n        return participants;\n    }\n});\nTemplate.hello.events({\n    'click button': function (event, instance) {\n        console.log('Clicked the button!'); // increment the counter when button is clicked\n\n        var id_num = $('#id_num').val();\n        var name = $('#participant_name').val();\n        var solar_capacity = $('#solar_capacity').val();\n        var battery_export_limit = $('#battery_export_limit').val();\n        var battery_capacity = $('#battery_capacity').val();\n        var enova_customer_flag = $('#enova_customer_flag').val();\n        var retail_tariff = $('[name=retail_tariff_selector]').val(); // retail_tariff = tmpl.find('#retail_tariff_selector :selected');\n        // console.log(battery_capacity)\n\n        instance.counter.set(instance.counter.get() + 1);\n        var participants = Session.get(\"participants\");\n        participants.push({\n            id_num: id_num,\n            name: name,\n            solar_capacity: solar_capacity,\n            battery_export_limit: battery_export_limit,\n            battery_capacity: battery_capacity,\n            enova_customer_flag: enova_customer_flag,\n            retail_tariff: retail_tariff\n        });\n        Session.set(\"participants\", participants);\n    },\n    'click #run-simulation': function (event, instance) {\n        console.log('Running Simulation');\n        Meteor.call('runSimulation', function (error, res) {\n            console.log(res);\n            console.log(JSON.parse(res));\n        });\n    }\n});\nTemplate.graph.onRendered(function () {\n    console.log('graph rendered!');\n\n    var RenderControls = function (args) {\n        var $ = jQuery;\n\n        this.initialize = function () {\n            this.element = args.element;\n            this.graph = args.graph;\n            this.settings = this.serialize();\n            this.inputs = {\n                renderer: this.element.elements.renderer,\n                interpolation: this.element.elements.interpolation,\n                offset: this.element.elements.offset\n            };\n            this.element.addEventListener('change', function (e) {\n                this.settings = this.serialize();\n\n                if (e.target.name == 'renderer') {\n                    this.setDefaultOffset(e.target.value);\n                }\n\n                this.syncOptions();\n                this.settings = this.serialize();\n                var config = {\n                    renderer: this.settings.renderer,\n                    interpolation: this.settings.interpolation\n                };\n\n                if (this.settings.offset == 'value') {\n                    config.unstack = true;\n                    config.offset = 'zero';\n                } else if (this.settings.offset == 'expand') {\n                    config.unstack = false;\n                    config.offset = this.settings.offset;\n                } else {\n                    config.unstack = false;\n                    config.offset = this.settings.offset;\n                }\n\n                this.graph.configure(config);\n                this.graph.render();\n            }.bind(this), false);\n        };\n\n        this.serialize = function () {\n            var values = {};\n            var pairs = $(this.element).serializeArray();\n            pairs.forEach(function (pair) {\n                values[pair.name] = pair.value;\n            });\n            return values;\n        };\n\n        this.syncOptions = function () {\n            var options = this.rendererOptions[this.settings.renderer];\n            Array.prototype.forEach.call(this.inputs.interpolation, function (input) {\n                if (options.interpolation) {\n                    input.disabled = false;\n                    input.parentNode.classList.remove('disabled');\n                } else {\n                    input.disabled = true;\n                    input.parentNode.classList.add('disabled');\n                }\n            });\n            Array.prototype.forEach.call(this.inputs.offset, function (input) {\n                if (options.offset.filter(function (o) {\n                    return o == input.value;\n                }).length) {\n                    input.disabled = false;\n                    input.parentNode.classList.remove('disabled');\n                } else {\n                    input.disabled = true;\n                    input.parentNode.classList.add('disabled');\n                }\n            }.bind(this));\n        };\n\n        this.setDefaultOffset = function (renderer) {\n            var options = this.rendererOptions[renderer];\n\n            if (options.defaults && options.defaults.offset) {\n                Array.prototype.forEach.call(this.inputs.offset, function (input) {\n                    if (input.value == options.defaults.offset) {\n                        input.checked = true;\n                    } else {\n                        input.checked = false;\n                    }\n                }.bind(this));\n            }\n        };\n\n        this.rendererOptions = {\n            area: {\n                interpolation: true,\n                offset: ['zero', 'wiggle', 'expand', 'value'],\n                defaults: {\n                    offset: 'zero'\n                }\n            },\n            line: {\n                interpolation: true,\n                offset: ['expand', 'value'],\n                defaults: {\n                    offset: 'value'\n                }\n            },\n            bar: {\n                interpolation: false,\n                offset: ['zero', 'wiggle', 'expand', 'value'],\n                defaults: {\n                    offset: 'zero'\n                }\n            },\n            scatterplot: {\n                interpolation: false,\n                offset: ['value'],\n                defaults: {\n                    offset: 'value'\n                }\n            }\n        };\n        this.initialize();\n    }; // set up our data series with 150 random data points\n\n\n    var seriesData = [[], [], [], [], [], [], [], [], []];\n    var random = new Rickshaw.Fixtures.RandomData(150);\n\n    for (var i = 0; i < 150; i++) {\n        random.addData(seriesData);\n    }\n\n    var palette = new Rickshaw.Color.Palette({\n        scheme: 'classic9'\n    }); // instantiate our graph!\n\n    var graph = new Rickshaw.Graph({\n        element: document.getElementById(\"chart\"),\n        width: 900,\n        height: 500,\n        renderer: 'area',\n        stroke: true,\n        preserve: true,\n        series: [{\n            color: palette.color(),\n            data: seriesData[0],\n            name: 'Moscow'\n        }, {\n            color: palette.color(),\n            data: seriesData[1],\n            name: 'Shanghai'\n        }, {\n            color: palette.color(),\n            data: seriesData[2],\n            name: 'Amsterdam'\n        }, {\n            color: palette.color(),\n            data: seriesData[3],\n            name: 'Paris'\n        }, {\n            color: palette.color(),\n            data: seriesData[4],\n            name: 'Tokyo'\n        }, {\n            color: palette.color(),\n            data: seriesData[5],\n            name: 'London'\n        }, {\n            color: palette.color(),\n            data: seriesData[6],\n            name: 'New York'\n        }]\n    });\n    graph.render();\n    var preview = new Rickshaw.Graph.RangeSlider.Preview({\n        graph: graph,\n        element: document.getElementById('preview')\n    });\n    var hoverDetail = new Rickshaw.Graph.HoverDetail({\n        graph: graph,\n        xFormatter: function (x) {\n            return new Date(x * 1000).toString();\n        }\n    });\n    var annotator = new Rickshaw.Graph.Annotate({\n        graph: graph,\n        element: document.getElementById('timeline')\n    });\n    var legend = new Rickshaw.Graph.Legend({\n        graph: graph,\n        element: document.getElementById('legend')\n    });\n    var shelving = new Rickshaw.Graph.Behavior.Series.Toggle({\n        graph: graph,\n        legend: legend\n    });\n    var order = new Rickshaw.Graph.Behavior.Series.Order({\n        graph: graph,\n        legend: legend\n    });\n    var highlighter = new Rickshaw.Graph.Behavior.Series.Highlight({\n        graph: graph,\n        legend: legend\n    });\n    var smoother = new Rickshaw.Graph.Smoother({\n        graph: graph,\n        element: document.querySelector('#smoother')\n    });\n    var ticksTreatment = 'glow';\n    var xAxis = new Rickshaw.Graph.Axis.Time({\n        graph: graph,\n        ticksTreatment: ticksTreatment,\n        timeFixture: new Rickshaw.Fixtures.Time.Local()\n    });\n    xAxis.render();\n    var yAxis = new Rickshaw.Graph.Axis.Y({\n        graph: graph,\n        tickFormat: Rickshaw.Fixtures.Number.formatKMBT,\n        ticksTreatment: ticksTreatment\n    });\n    yAxis.render();\n    var controls = new RenderControls({\n        element: document.querySelector('form'),\n        graph: graph\n    }); // add some data every so often\n\n    var messages = [\"Changed home page welcome message\", \"Minified JS and CSS\", \"Changed button color from blue to green\", \"Refactored SQL query to use indexed columns\", \"Added additional logging for debugging\", \"Fixed typo\", \"Rewrite conditional logic for clarity\", \"Added documentation for new methods\"];\n    setInterval(function () {\n        random.removeData(seriesData);\n        random.addData(seriesData);\n        graph.update();\n    }, 3000);\n\n    function addAnnotation(force) {\n        if (messages.length > 0 && (force || Math.random() >= 0.95)) {\n            annotator.add(seriesData[2][seriesData[2].length - 1].x, messages.shift());\n            annotator.update();\n        }\n    }\n\n    addAnnotation(true);\n    setTimeout(function () {\n        setInterval(addAnnotation, 6000);\n    }, 6000);\n    console.log(preview);\n    var previewXAxis = new Rickshaw.Graph.Axis.Time({\n        graph: preview.previews[0],\n        timeFixture: new Rickshaw.Fixtures.Time.Local(),\n        ticksTreatment: ticksTreatment\n    });\n    previewXAxis.render();\n});","map":{"version":3,"sources":["client/main.js"],"names":["Template","module","watch","require","v","ReactiveVar","hello","onCreated","helloOnCreated","counter","Session","set","helpers","instance","get","retail_tariffs","network_tariffs","participants","events","event","console","log","id_num","$","val","name","solar_capacity","battery_export_limit","battery_capacity","enova_customer_flag","retail_tariff","push","Meteor","call","error","res","JSON","parse","graph","onRendered","RenderControls","args","jQuery","initialize","element","settings","serialize","inputs","renderer","elements","interpolation","offset","addEventListener","e","target","setDefaultOffset","value","syncOptions","config","unstack","configure","render","bind","values","pairs","serializeArray","forEach","pair","options","rendererOptions","Array","prototype","input","disabled","parentNode","classList","remove","add","filter","o","length","defaults","checked","area","line","bar","scatterplot","seriesData","random","Rickshaw","Fixtures","RandomData","i","addData","palette","Color","Palette","scheme","Graph","document","getElementById","width","height","stroke","preserve","series","color","data","preview","RangeSlider","Preview","hoverDetail","HoverDetail","xFormatter","x","Date","toString","annotator","Annotate","legend","Legend","shelving","Behavior","Series","Toggle","order","Order","highlighter","Highlight","smoother","Smoother","querySelector","ticksTreatment","xAxis","Axis","Time","timeFixture","Local","yAxis","Y","tickFormat","Number","formatKMBT","controls","messages","setInterval","removeData","update","addAnnotation","force","Math","shift","setTimeout","previewXAxis","previews"],"mappings":"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","file":"client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\r\nimport { ReactiveVar } from 'meteor/reactive-var';\r\n\r\nimport './main.html';\r\n\r\nTemplate.hello.onCreated(function helloOnCreated() {\r\n    // counter starts at 0\r\n    this.counter = new ReactiveVar(0);\r\n    Session.set(\"participants\", []);\r\n});\r\n\r\n\r\n\r\nTemplate.hello.helpers({\r\n    counter() {\r\n        return Template.instance().counter.get();\r\n    },\r\n    retail_tariffs() {\r\n        return ['Retail Tariff 1', 'Retail Tariff 2', 'Retail Tariff 3'];\r\n    },\r\n    network_tariffs() {\r\n        return ['Network Tariff 1', 'Network Tariff 2', 'Network Tariff 3'];\r\n    }\r\n\r\n});\r\n\r\nTemplate.participants.helpers({\r\n    participants() {\r\n        var participants = Session.get(\"participants\");\r\n        return participants;\r\n    },\r\n});\r\n\r\nTemplate.hello.events({\r\n    'click button' (event, instance) {\r\n        console.log('Clicked the button!')\r\n            // increment the counter when button is clicked\r\n        var id_num = $('#id_num').val();\r\n        var name = $('#participant_name').val();\r\n        var solar_capacity = $('#solar_capacity').val();\r\n        var battery_export_limit = $('#battery_export_limit').val();\r\n        var battery_capacity = $('#battery_capacity').val();\r\n        var enova_customer_flag = $('#enova_customer_flag').val();\r\n        var retail_tariff = $('[name=retail_tariff_selector]').val();\r\n\r\n        // retail_tariff = tmpl.find('#retail_tariff_selector :selected');\r\n\r\n\r\n        // console.log(battery_capacity)\r\n        instance.counter.set(instance.counter.get() + 1);\r\n        var participants = Session.get(\"participants\");\r\n\r\n        participants.push({\r\n            id_num: id_num,\r\n            name: name,\r\n            solar_capacity: solar_capacity,\r\n            battery_export_limit: battery_export_limit,\r\n            battery_capacity: battery_capacity,\r\n            enova_customer_flag: enova_customer_flag,\r\n            retail_tariff: retail_tariff\r\n        });\r\n        Session.set(\"participants\", participants);\r\n    },\r\n\r\n    'click #run-simulation' (event, instance) {\r\n        console.log('Running Simulation')\r\n        Meteor.call('runSimulation', function(error, res) {\r\n            console.log(res);\r\n            console.log(JSON.parse(res))\r\n        });\r\n    }\r\n});\r\n\r\n\r\nTemplate.graph.onRendered(function() {\r\n    console.log('graph rendered!');\r\n\r\n    var RenderControls = function(args) {\r\n\r\n        var $ = jQuery;\r\n\r\n        this.initialize = function() {\r\n\r\n            this.element = args.element;\r\n            this.graph = args.graph;\r\n            this.settings = this.serialize();\r\n\r\n            this.inputs = {\r\n                renderer: this.element.elements.renderer,\r\n                interpolation: this.element.elements.interpolation,\r\n                offset: this.element.elements.offset\r\n            };\r\n\r\n            this.element.addEventListener('change', function(e) {\r\n\r\n                this.settings = this.serialize();\r\n\r\n                if (e.target.name == 'renderer') {\r\n                    this.setDefaultOffset(e.target.value);\r\n                }\r\n\r\n                this.syncOptions();\r\n                this.settings = this.serialize();\r\n\r\n                var config = {\r\n                    renderer: this.settings.renderer,\r\n                    interpolation: this.settings.interpolation\r\n                };\r\n\r\n                if (this.settings.offset == 'value') {\r\n                    config.unstack = true;\r\n                    config.offset = 'zero';\r\n                } else if (this.settings.offset == 'expand') {\r\n                    config.unstack = false;\r\n                    config.offset = this.settings.offset;\r\n                } else {\r\n                    config.unstack = false;\r\n                    config.offset = this.settings.offset;\r\n                }\r\n\r\n                this.graph.configure(config);\r\n                this.graph.render();\r\n\r\n            }.bind(this), false);\r\n        }\r\n\r\n        this.serialize = function() {\r\n\r\n            var values = {};\r\n            var pairs = $(this.element).serializeArray();\r\n\r\n            pairs.forEach(function(pair) {\r\n                values[pair.name] = pair.value;\r\n            });\r\n\r\n            return values;\r\n        };\r\n\r\n        this.syncOptions = function() {\r\n\r\n            var options = this.rendererOptions[this.settings.renderer];\r\n\r\n            Array.prototype.forEach.call(this.inputs.interpolation, function(input) {\r\n\r\n                if (options.interpolation) {\r\n                    input.disabled = false;\r\n                    input.parentNode.classList.remove('disabled');\r\n                } else {\r\n                    input.disabled = true;\r\n                    input.parentNode.classList.add('disabled');\r\n                }\r\n            });\r\n\r\n            Array.prototype.forEach.call(this.inputs.offset, function(input) {\r\n\r\n                if (options.offset.filter(function(o) { return o == input.value }).length) {\r\n                    input.disabled = false;\r\n                    input.parentNode.classList.remove('disabled');\r\n\r\n                } else {\r\n                    input.disabled = true;\r\n                    input.parentNode.classList.add('disabled');\r\n                }\r\n\r\n            }.bind(this));\r\n\r\n        };\r\n\r\n        this.setDefaultOffset = function(renderer) {\r\n\r\n            var options = this.rendererOptions[renderer];\r\n\r\n            if (options.defaults && options.defaults.offset) {\r\n\r\n                Array.prototype.forEach.call(this.inputs.offset, function(input) {\r\n                    if (input.value == options.defaults.offset) {\r\n                        input.checked = true;\r\n                    } else {\r\n                        input.checked = false;\r\n                    }\r\n\r\n                }.bind(this));\r\n            }\r\n        };\r\n\r\n        this.rendererOptions = {\r\n\r\n            area: {\r\n                interpolation: true,\r\n                offset: ['zero', 'wiggle', 'expand', 'value'],\r\n                defaults: { offset: 'zero' }\r\n            },\r\n            line: {\r\n                interpolation: true,\r\n                offset: ['expand', 'value'],\r\n                defaults: { offset: 'value' }\r\n            },\r\n            bar: {\r\n                interpolation: false,\r\n                offset: ['zero', 'wiggle', 'expand', 'value'],\r\n                defaults: { offset: 'zero' }\r\n            },\r\n            scatterplot: {\r\n                interpolation: false,\r\n                offset: ['value'],\r\n                defaults: { offset: 'value' }\r\n            }\r\n        };\r\n\r\n        this.initialize();\r\n    };\r\n\r\n\r\n\r\n    // set up our data series with 150 random data points\r\n\r\n    var seriesData = [\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        []\r\n    ];\r\n    var random = new Rickshaw.Fixtures.RandomData(150);\r\n\r\n    for (var i = 0; i < 150; i++) {\r\n        random.addData(seriesData);\r\n    }\r\n\r\n    var palette = new Rickshaw.Color.Palette({ scheme: 'classic9' });\r\n\r\n    // instantiate our graph!\r\n\r\n    var graph = new Rickshaw.Graph({\r\n        element: document.getElementById(\"chart\"),\r\n        width: 900,\r\n        height: 500,\r\n        renderer: 'area',\r\n        stroke: true,\r\n        preserve: true,\r\n        series: [{\r\n            color: palette.color(),\r\n            data: seriesData[0],\r\n            name: 'Moscow'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[1],\r\n            name: 'Shanghai'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[2],\r\n            name: 'Amsterdam'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[3],\r\n            name: 'Paris'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[4],\r\n            name: 'Tokyo'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[5],\r\n            name: 'London'\r\n        }, {\r\n            color: palette.color(),\r\n            data: seriesData[6],\r\n            name: 'New York'\r\n        }]\r\n    });\r\n\r\n    graph.render();\r\n\r\n    var preview = new Rickshaw.Graph.RangeSlider.Preview({\r\n        graph: graph,\r\n        element: document.getElementById('preview'),\r\n    });\r\n\r\n    var hoverDetail = new Rickshaw.Graph.HoverDetail({\r\n        graph: graph,\r\n        xFormatter: function(x) {\r\n            return new Date(x * 1000).toString();\r\n        }\r\n    });\r\n\r\n    var annotator = new Rickshaw.Graph.Annotate({\r\n        graph: graph,\r\n        element: document.getElementById('timeline')\r\n    });\r\n\r\n    var legend = new Rickshaw.Graph.Legend({\r\n        graph: graph,\r\n        element: document.getElementById('legend')\r\n\r\n    });\r\n\r\n    var shelving = new Rickshaw.Graph.Behavior.Series.Toggle({\r\n        graph: graph,\r\n        legend: legend\r\n    });\r\n\r\n    var order = new Rickshaw.Graph.Behavior.Series.Order({\r\n        graph: graph,\r\n        legend: legend\r\n    });\r\n\r\n    var highlighter = new Rickshaw.Graph.Behavior.Series.Highlight({\r\n        graph: graph,\r\n        legend: legend\r\n    });\r\n\r\n    var smoother = new Rickshaw.Graph.Smoother({\r\n        graph: graph,\r\n        element: document.querySelector('#smoother')\r\n    });\r\n\r\n    var ticksTreatment = 'glow';\r\n\r\n    var xAxis = new Rickshaw.Graph.Axis.Time({\r\n        graph: graph,\r\n        ticksTreatment: ticksTreatment,\r\n        timeFixture: new Rickshaw.Fixtures.Time.Local()\r\n    });\r\n\r\n    xAxis.render();\r\n\r\n    var yAxis = new Rickshaw.Graph.Axis.Y({\r\n        graph: graph,\r\n        tickFormat: Rickshaw.Fixtures.Number.formatKMBT,\r\n        ticksTreatment: ticksTreatment\r\n    });\r\n\r\n    yAxis.render();\r\n\r\n\r\n    var controls = new RenderControls({\r\n        element: document.querySelector('form'),\r\n        graph: graph\r\n    });\r\n\r\n    // add some data every so often\r\n\r\n    var messages = [\r\n        \"Changed home page welcome message\",\r\n        \"Minified JS and CSS\",\r\n        \"Changed button color from blue to green\",\r\n        \"Refactored SQL query to use indexed columns\",\r\n        \"Added additional logging for debugging\",\r\n        \"Fixed typo\",\r\n        \"Rewrite conditional logic for clarity\",\r\n        \"Added documentation for new methods\"\r\n    ];\r\n\r\n    setInterval(function() {\r\n        random.removeData(seriesData);\r\n        random.addData(seriesData);\r\n        graph.update();\r\n\r\n    }, 3000);\r\n\r\n    function addAnnotation(force) {\r\n        if (messages.length > 0 && (force || Math.random() >= 0.95)) {\r\n            annotator.add(seriesData[2][seriesData[2].length - 1].x, messages.shift());\r\n            annotator.update();\r\n        }\r\n    }\r\n\r\n    addAnnotation(true);\r\n    setTimeout(function() { setInterval(addAnnotation, 6000) }, 6000);\r\n\r\n    console.log(preview)\r\n    var previewXAxis = new Rickshaw.Graph.Axis.Time({\r\n        graph: preview.previews[0],\r\n        timeFixture: new Rickshaw.Fixtures.Time.Local(),\r\n        ticksTreatment: ticksTreatment\r\n    });\r\n\r\n    previewXAxis.render();\r\n});"]},"hash":"2f153ced0a207f3170487275182cf76126c30137"}
